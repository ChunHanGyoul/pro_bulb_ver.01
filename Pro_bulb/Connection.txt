package com.example.kwonwanbin.pro_bulb;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.SystemClock;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class Connection extends Activity {
    Button btnStart;
    Button btnOnOff;
    String ip = "Yun IP";
    ArduinoConnection AandYConnect;


    String serverIpAddress = "Yun IP";

    static Boolean started = false;

    private long lastClickTime = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_android_yun_conn);

        btnStart = (Button) findViewById(R.id.button_start);
        btnOnOff = (Button) findViewById(R.id.OnOff);
        btnStart.setOnClickListener(startListener);

        EditText ipAddr = (EditText) findViewById(R.id.ipaddr);
        ipAddr.setText("192.168.0.");

        ipAddr.addTextChangedListener(new TextWatcher() {
            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {

            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count,
                                          int after) {
                // TODO Auto-generated method stub

            }

            @Override
            public void afterTextChanged(Editable s) {
                serverIpAddress = s.toString();
            }
        });
    }

    private View.OnClickListener startListener = new View.OnClickListener() {

        @Override
        public void onClick(View v) {
            TextView InfoText1 = (TextView) findViewById(R.id.infoText1);

            if (SystemClock.elapsedRealtime() - lastClickTime < 1000) {
                return;
            } else {
                lastClickTime = SystemClock.elapsedRealtime();
            }
            if (started == false) {
                if (serverIpAddress.equals(ip)) {
                    Log.d("ZZZZZ", "startListener No IP can't start");

                    InfoText1.setText("No IP can't start");
                } else {
                    Log.d("ZZZZZ", "startListener");

                    InfoText1.setText("Starting Connection");
                    btnStart.setText(R.string.button_stop);

                    started = true;

                    AandYConnect = new ArduinoConnection(serverIpAddress);
                    AandYConnect.execute();

                    InfoText1.setText("Yun Connected");

                    change_Activity();
                }
            } else {
                Log.d("ZZZZZ", "stopListener");
                started = false;
                InfoText1.setText("Connection Closed ");

                btnStart.setText(R.string.button_start);
                AandYConnect.cancel(true);
                AandYConnect.yunData = -1;
                ArduinoConnection.SendDirectionToYun((short)255);

            }
        }
    };

    private void change_Activity()
    {
        Intent intent_change = new Intent(Connection.this, MainActivity.class);
        startActivity(intent_change);
    }
}
